Node { content: FunctionDefinitionData { prototype: Node { content: FunctionPrototypeData { ty: Node { content: FullySpecifiedTypeData { qualifier: None, ty: Node { content: TypeSpecifierData { ty: Node { content: Void, span: None }, array_specifier: None }, span: None } }, span: None }, name: Node { content: IdentifierData("main"), span: None }, parameters: [] }, span: None }, statement: Node { content: CompoundStatementData { statement_list: [Node { content: Declaration(Node { content: InitDeclaratorList(Node { content: InitDeclaratorListData { head: Node { content: SingleDeclarationData { ty: Node { content: FullySpecifiedTypeData { qualifier: None, ty: Node { content: TypeSpecifierData { ty: Node { content: TypeName(Node { content: TypeNameData("TexVSOutput"), span: Some(NodeSpan { source_id: 0, start: 948, end: 959 }) }), span: Some(NodeSpan { source_id: 0, start: 948, end: 959 }) }, array_specifier: None }, span: Some(NodeSpan { source_id: 0, start: 948, end: 959 }) } }, span: Some(NodeSpan { source_id: 0, start: 948, end: 959 }) }, name: Some(Node { content: IdentifierData("o"), span: Some(NodeSpan { source_id: 0, start: 960, end: 961 }) }), array_specifier: None, initializer: None }, span: Some(NodeSpan { source_id: 0, start: 948, end: 961 }) }, tail: [] }, span: Some(NodeSpan { source_id: 0, start: 948, end: 961 }) }), span: Some(NodeSpan { source_id: 0, start: 948, end: 962 }) }), span: Some(NodeSpan { source_id: 0, start: 948, end: 962 }) }, Node { content: Expression(Node { content: ExprStatementData(Some(Node { content: Assignment(Node { content: Dot(Node { content: Variable(Node { content: IdentifierData("o"), span: Some(NodeSpan { source_id: 0, start: 965, end: 966 }) }), span: Some(NodeSpan { source_id: 0, start: 965, end: 966 }) }, Node { content: IdentifierData("uv"), span: Some(NodeSpan { source_id: 0, start: 967, end: 969 }) }), span: Some(NodeSpan { source_id: 0, start: 965, end: 969 }) }, Node { content: Equal, span: Some(NodeSpan { source_id: 0, start: 970, end: 971 }) }, Node { content: Variable(Node { content: IdentifierData("vert_uv0"), span: Some(NodeSpan { source_id: 0, start: 972, end: 980 }) }), span: Some(NodeSpan { source_id: 0, start: 972, end: 980 }) }), span: Some(NodeSpan { source_id: 0, start: 965, end: 980 }) })), span: Some(NodeSpan { source_id: 0, start: 965, end: 981 }) }), span: Some(NodeSpan { source_id: 0, start: 965, end: 981 }) }, Node { content: Expression(Node { content: ExprStatementData(Some(Node { content: Assignment(Node { content: Dot(Node { content: Variable(Node { content: IdentifierData("o"), span: Some(NodeSpan { source_id: 0, start: 985, end: 986 }) }), span: Some(NodeSpan { source_id: 0, start: 985, end: 986 }) }, Node { content: IdentifierData("color"), span: Some(NodeSpan { source_id: 0, start: 987, end: 992 }) }), span: Some(NodeSpan { source_id: 0, start: 985, end: 992 }) }, Node { content: Equal, span: Some(NodeSpan { source_id: 0, start: 993, end: 994 }) }, Node { content: Dot(Node { content: Variable(Node { content: IdentifierData("material"), span: Some(NodeSpan { source_id: 0, start: 995, end: 1003 }) }), span: Some(NodeSpan { source_id: 0, start: 995, end: 1003 }) }, Node { content: IdentifierData("color"), span: Some(NodeSpan { source_id: 0, start: 1004, end: 1009 }) }), span: Some(NodeSpan { source_id: 0, start: 995, end: 1009 }) }), span: Some(NodeSpan { source_id: 0, start: 985, end: 1009 }) })), span: Some(NodeSpan { source_id: 0, start: 985, end: 1010 }) }), span: Some(NodeSpan { source_id: 0, start: 985, end: 1010 }) }, Node { content: Declaration(Node { content: InitDeclaratorList(Node { content: InitDeclaratorListData { head: Node { content: SingleDeclarationData { ty: Node { content: FullySpecifiedTypeData { qualifier: None, ty: Node { content: TypeSpecifierData { ty: Node { content: Vec4, span: Some(NodeSpan { source_id: 0, start: 1013, end: 1017 }) }, array_specifier: None }, span: Some(NodeSpan { source_id: 0, start: 1013, end: 1017 }) } }, span: Some(NodeSpan { source_id: 0, start: 1013, end: 1017 }) }, name: Some(Node { content: IdentifierData("pos"), span: Some(NodeSpan { source_id: 0, start: 1018, end: 1021 }) }), array_specifier: None, initializer: Some(Node { content: Simple(Node { content: Binary(Node { content: Mult, span: Some(NodeSpan { source_id: 0, start: 1039, end: 1040 }) }, Node { content: FunCall(Node { content: Expr(Node { content: Variable(Node { content: IdentifierData("getTransform"), span: Some(NodeSpan { source_id: 0, start: 1024, end: 1036 }) }), span: Some(NodeSpan { source_id: 0, start: 1024, end: 1036 }) }), span: Some(NodeSpan { source_id: 0, start: 1024, end: 1036 }) }, []), span: Some(NodeSpan { source_id: 0, start: 1024, end: 1038 }) }, Node { content: FunCall(Node { content: TypeSpecifier(Node { content: TypeSpecifierData { ty: Node { content: Vec4, span: Some(NodeSpan { source_id: 0, start: 1041, end: 1045 }) }, array_specifier: None }, span: Some(NodeSpan { source_id: 0, start: 1041, end: 1045 }) }), span: Some(NodeSpan { source_id: 0, start: 1041, end: 1045 }) }, [Node { content: Variable(Node { content: IdentifierData("vert_position"), span: Some(NodeSpan { source_id: 0, start: 1046, end: 1059 }) }), span: Some(NodeSpan { source_id: 0, start: 1046, end: 1059 }) }, Node { content: FloatConst(1.0), span: Some(NodeSpan { source_id: 0, start: 1061, end: 1064 }) }]), span: Some(NodeSpan { source_id: 0, start: 1041, end: 1065 }) }), span: Some(NodeSpan { source_id: 0, start: 1024, end: 1065 }) }), span: Some(NodeSpan { source_id: 0, start: 1024, end: 1065 }) }) }, span: Some(NodeSpan { source_id: 0, start: 1013, end: 1065 }) }, tail: [] }, span: Some(NodeSpan { source_id: 0, start: 1013, end: 1065 }) }), span: Some(NodeSpan { source_id: 0, start: 1013, end: 1066 }) }), span: Some(NodeSpan { source_id: 0, start: 1013, end: 1066 }) }, Node { content: Declaration(Node { content: InitDeclaratorList(Node { content: InitDeclaratorListData { head: Node { content: SingleDeclarationData { ty: Node { content: FullySpecifiedTypeData { qualifier: None, ty: Node { content: TypeSpecifierData { ty: Node { content: Mat4, span: Some(NodeSpan { source_id: 0, start: 1069, end: 1073 }) }, array_specifier: None }, span: Some(NodeSpan { source_id: 0, start: 1069, end: 1073 }) } }, span: Some(NodeSpan { source_id: 0, start: 1069, end: 1073 }) }, name: Some(Node { content: IdentifierData("skinMat"), span: Some(NodeSpan { source_id: 0, start: 1074, end: 1081 }) }), array_specifier: None, initializer: Some(Node { content: Simple(Node { content: FunCall(Node { content: Expr(Node { content: Variable(Node { content: IdentifierData("calcSkinMat"), span: Some(NodeSpan { source_id: 0, start: 1084, end: 1095 }) }), span: Some(NodeSpan { source_id: 0, start: 1084, end: 1095 }) }), span: Some(NodeSpan { source_id: 0, start: 1084, end: 1095 }) }, []), span: Some(NodeSpan { source_id: 0, start: 1084, end: 1097 }) }), span: Some(NodeSpan { source_id: 0, start: 1084, end: 1097 }) }) }, span: Some(NodeSpan { source_id: 0, start: 1069, end: 1097 }) }, tail: [] }, span: Some(NodeSpan { source_id: 0, start: 1069, end: 1097 }) }), span: Some(NodeSpan { source_id: 0, start: 1069, end: 1098 }) }), span: Some(NodeSpan { source_id: 0, start: 1069, end: 1098 }) }, Node { content: Expression(Node { content: ExprStatementData(Some(Node { content: Assignment(Node { content: Variable(Node { content: IdentifierData("pos"), span: Some(NodeSpan { source_id: 0, start: 1101, end: 1104 }) }), span: Some(NodeSpan { source_id: 0, start: 1101, end: 1104 }) }, Node { content: Equal, span: Some(NodeSpan { source_id: 0, start: 1105, end: 1106 }) }, Node { content: Binary(Node { content: Mult, span: Some(NodeSpan { source_id: 0, start: 1115, end: 1116 }) }, Node { content: Variable(Node { content: IdentifierData("skinMat"), span: Some(NodeSpan { source_id: 0, start: 1107, end: 1114 }) }), span: Some(NodeSpan { source_id: 0, start: 1107, end: 1114 }) }, Node { content: Variable(Node { content: IdentifierData("pos"), span: Some(NodeSpan { source_id: 0, start: 1117, end: 1120 }) }), span: Some(NodeSpan { source_id: 0, start: 1117, end: 1120 }) }), span: Some(NodeSpan { source_id: 0, start: 1107, end: 1120 }) }), span: Some(NodeSpan { source_id: 0, start: 1101, end: 1120 }) })), span: Some(NodeSpan { source_id: 0, start: 1101, end: 1121 }) }), span: Some(NodeSpan { source_id: 0, start: 1101, end: 1121 }) }, Node { content: Expression(Node { content: ExprStatementData(Some(Node { content: Assignment(Node { content: Variable(Node { content: IdentifierData("gl_Position"), span: Some(NodeSpan { source_id: 0, start: 1124, end: 1135 }) }), span: Some(NodeSpan { source_id: 0, start: 1124, end: 1135 }) }, Node { content: Equal, span: Some(NodeSpan { source_id: 0, start: 1136, end: 1137 }) }, Node { content: Binary(Node { content: Mult, span: Some(NodeSpan { source_id: 0, start: 1158, end: 1159 }) }, Node { content: FunCall(Node { content: Expr(Node { content: Variable(Node { content: IdentifierData("getCameraProjView"), span: Some(NodeSpan { source_id: 0, start: 1138, end: 1155 }) }), span: Some(NodeSpan { source_id: 0, start: 1138, end: 1155 }) }), span: Some(NodeSpan { source_id: 0, start: 1138, end: 1155 }) }, []), span: Some(NodeSpan { source_id: 0, start: 1138, end: 1157 }) }, Node { content: Variable(Node { content: IdentifierData("pos"), span: Some(NodeSpan { source_id: 0, start: 1160, end: 1163 }) }), span: Some(NodeSpan { source_id: 0, start: 1160, end: 1163 }) }), span: Some(NodeSpan { source_id: 0, start: 1138, end: 1163 }) }), span: Some(NodeSpan { source_id: 0, start: 1124, end: 1163 }) })), span: Some(NodeSpan { source_id: 0, start: 1124, end: 1164 }) }), span: Some(NodeSpan { source_id: 0, start: 1124, end: 1164 }) }, Node { content: Expression(Node { content: ExprStatementData(Some(Node { content: Assignment(Node { content: Variable(Node { content: IdentifierData("_output"), span: None }), span: None }, Node { content: Equal, span: None }, Node { content: Variable(Node { content: IdentifierData("o"), span: Some(NodeSpan { source_id: 0, start: 1174, end: 1175 }) }), span: Some(NodeSpan { source_id: 0, start: 1174, end: 1175 }) }), span: None })), span: None }), span: None }, Node { content: Jump(Node { content: Return(None), span: None }), span: None }] }, span: None } }, span: None }